def get_model_description(model_name):
    # --------------------------
    #Retorna uma string com a descri√ß√£o detalhada de cada modelo de IA.
    # --------------------------
    descriptions = {
        "Xception": (
            "üìò XCEPTION (Extreme Inception)\n"
            "================================\n"
            "‚Ä¢ Arquitetura: Evolu√ß√£o do Inception V3 com convolu√ß√µes separ√°veis em profundidade\n"
            "‚Ä¢ Par√¢metros: ~23 milh√µes\n"
            "‚Ä¢ Profundidade: 126 camadas\n"
            "‚Ä¢ Precis√£o ImageNet: 94.5% (Top-5)\n\n"
            "VANTAGENS PARA DEEPFAKE:\n"
            "‚úì Excelente em detectar artefatos de compress√£o e inconsist√™ncias de textura\n"
            "‚úì Sens√≠vel a padr√µes de alta frequ√™ncia alterados em manipula√ß√µes faciais\n"
            "‚úì √ìtimo para v√≠deos HD/4K com detalhes sutis\n"
            "‚úì Detecta bem bordas artificiais e transi√ß√µes n√£o naturais\n\n"
            "QUANDO USAR:\n"
            "‚Ä¢ V√≠deos de alta qualidade (1080p+)\n"
            "‚Ä¢ Suspeita de deepfakes sofisticados\n"
            "‚Ä¢ Quando precis√£o √© mais importante que velocidade"
        ),
        
        "EfficientNet": (
            "‚ö° EFFICIENTNET-B0\n"
            "==================\n"
            "‚Ä¢ Arquitetura: Rede neural com escalonamento composto otimizado\n"
            "‚Ä¢ Par√¢metros: ~5.3 milh√µes (B0)\n"
            "‚Ä¢ Profundidade: Vari√°vel (B0-B7)\n"
            "‚Ä¢ Precis√£o ImageNet: 93.3% (Top-5)\n\n"
            "VANTAGENS PARA DEEPFAKE:\n"
            "‚úì Melhor rela√ß√£o precis√£o/velocidade do mercado\n"
            "‚úì Detecta padr√µes em m√∫ltiplas escalas simultaneamente\n"
            "‚úì Eficiente em recursos computacionais (30% mais r√°pido)\n"
            "‚úì Boa generaliza√ß√£o para diferentes tipos de manipula√ß√£o\n\n"
            "QUANDO USAR:\n"
            "‚Ä¢ An√°lise em tempo real ou quase real\n"
            "‚Ä¢ Dispositivos com recursos limitados\n"
            "‚Ä¢ Grande volume de v√≠deos para processar\n"
            "‚Ä¢ Primeira triagem r√°pida"
        ),
        
        "Inception": (
            "üåÄ INCEPTION V3\n"
            "===============\n"
            "‚Ä¢ Arquitetura: M√≥dulos Inception com filtros paralelos de m√∫ltiplos tamanhos\n"
            "‚Ä¢ Par√¢metros: ~24 milh√µes\n"
            "‚Ä¢ Profundidade: 159 camadas\n"
            "‚Ä¢ Precis√£o ImageNet: 93.7% (Top-5)\n\n"
            "VANTAGENS PARA DEEPFAKE:\n"
            "‚úì Captura caracter√≠sticas em m√∫ltiplas escalas (1x1, 3x3, 5x5)\n"
            "‚úì Excelente para detectar inconsist√™ncias temporais\n"
            "‚úì Forte em identificar artefatos de blending facial\n"
            "‚úì Detecta bem distor√ß√µes geom√©tricas sutis\n\n"
            "QUANDO USAR:\n"
            "‚Ä¢ V√≠deos com movimentos complexos\n"
            "‚Ä¢ Deepfakes com m√∫ltiplas faces\n"
            "‚Ä¢ Quando h√° suspeita de manipula√ß√£o temporal\n"
            "‚Ä¢ An√°lise detalhada frame a frame"
        ),
        
        "ResNet": (
            "üõ°Ô∏è RESNET-50\n"
            "=============\n"
            "‚Ä¢ Arquitetura: Rede residual com conex√µes de atalho (skip connections)\n"
            "‚Ä¢ Par√¢metros: ~25.6 milh√µes\n"
            "‚Ä¢ Profundidade: 50 camadas (vers√µes: 18, 34, 50, 101, 152)\n"
            "‚Ä¢ Precis√£o ImageNet: 92.1% (Top-5)\n\n"
            "VANTAGENS PARA DEEPFAKE:\n"
            "‚úì Extremamente robusto contra degrada√ß√£o de gradiente\n"
            "‚úì Captura caracter√≠sticas profundas e abstratas\n"
            "‚úì Resistente a ru√≠do e compress√£o de v√≠deo\n"
            "‚úì Excelente em detectar inconsist√™ncias de ilumina√ß√£o\n"
            "‚úì Forte contra adversarial attacks\n\n"
            "QUANDO USAR:\n"
            "‚Ä¢ V√≠deos de baixa qualidade ou comprimidos\n"
            "‚Ä¢ Deepfakes que tentam enganar outros detectores\n"
            "‚Ä¢ An√°lise de consist√™ncia de ilumina√ß√£o/sombras\n"
            "‚Ä¢ Quando robustez √© prioridade"
        )
    }
    
    # Adicionar informa√ß√£o comparativa geral
    general_info = (
        "\n\nüí° DICA DE ESCOLHA:\n"
        "-------------------\n"
        "‚Ä¢ Velocidade: EfficientNet > ResNet > Inception > Xception\n"
        "‚Ä¢ Precis√£o: Xception ‚âà Inception > ResNet > EfficientNet\n"
        "‚Ä¢ Robustez: ResNet > Xception > Inception > EfficientNet\n"
        "‚Ä¢ Uso de mem√≥ria: EfficientNet < ResNet < Inception < Xception"
    )
    
    description = descriptions.get(model_name, f"‚ÑπÔ∏è Nenhuma descri√ß√£o dispon√≠vel para '{model_name}'.")
    
    # Adicionar informa√ß√£o geral apenas se encontrou a descri√ß√£o
    if model_name in descriptions:
        description += general_info
    
    return description